memberSearchIndex = [{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"action"},{"p":"engine.bot.ml_bot.agent","c":"Action","l":"Action(RealVector)","u":"%3Cinit%3E(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"ActivationFunction","l":"activation(double)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"LogSigFunction","l":"activation(double)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"PureLinearActivationFunction","l":"activation(double)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"ReLUFunction","l":"activation(double)"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer","l":"addExperience(ReplayBuffer.Experience)","u":"addExperience(engine.bot.ml_bot.network.ReplayBuffer.Experience)"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"addExperienceToBuffer(State, Action, double, State)","u":"addExperienceToBuffer(engine.bot.ml_bot.agent.State,engine.bot.ml_bot.agent.Action,double,engine.bot.ml_bot.agent.State)"},{"p":"engine.bot.AibotGA","c":"AiBotGA","l":"AiBotGA(GolfGameEngine)","u":"%3Cinit%3E(engine.solvers.GolfGameEngine)"},{"p":"ui.controller","c":"ThirdScreenController","l":"animateBallMovement(ArrayList<double[]>, int)","u":"animateBallMovement(java.util.ArrayList,int)"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"assumeVelocity(double[])"},{"p":"engine.bot.rule_based_old","c":"PredictVelocity","l":"assumeVelocity(double[])"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"backpropagate(RealVector, double, double)","u":"backpropagate(org.apache.commons.math3.linear.RealVector,double,double)"},{"p":"engine.bot.rule_based_old","c":"CheckCollisionAndHeight","l":"calculateCollisionVectors(double[][], double[], double[], double[])","u":"calculateCollisionVectors(double[][],double[],double[],double[])"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"calculateDirection(double[], double[])","u":"calculateDirection(double[],double[])"},{"p":"engine.bot.rule_based_old","c":"CheckCollisionAndHeight","l":"calculateDirection(double[], double[])","u":"calculateDirection(double[],double[])"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"calculateNextState(RealVector)","u":"calculateNextState(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"calculateNodeError(List<Double>, int, double, List<Perceptron>, ActivationFunction)","u":"calculateNodeError(java.util.List,int,double,java.util.List,engine.bot.ml_bot.math.activation_functions.ActivationFunction)"},{"p":"engine.bot.ml_bot.math.q_calculations","c":"QCalculations","l":"calculateQValue(State, Action, double, State, NeuralNetwork)","u":"calculateQValue(engine.bot.ml_bot.agent.State,engine.bot.ml_bot.agent.Action,double,engine.bot.ml_bot.agent.State,engine.bot.ml_bot.network.NeuralNetwork)"},{"p":"engine.bot.ml_bot.agent","c":"Reward","l":"calculateReward(State, State, RealVector)","u":"calculateReward(engine.bot.ml_bot.agent.State,engine.bot.ml_bot.agent.State,org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.rule_based_old","c":"BotInterface","l":"calculateScore(double[], double[][], double[][])","u":"calculateScore(double[],double[][],double[][])"},{"p":"engine.bot.rule_based_old","c":"ComparingAndScoring","l":"calculateScore(double[], double[][], double[][])","u":"calculateScore(double[],double[][],double[][])"},{"p":"ui.helpers","c":"CanvasToPng","l":"CanvasToPng(Canvas)","u":"%3Cinit%3E(javafx.scene.canvas.Canvas)"},{"p":"engine.bot.rule_based_old","c":"CheckCollisionAndHeight","l":"CheckCollisionAndHeight(RungeKutta4Void, PredictVelocity)","u":"%3Cinit%3E(engine.bot.rule_based_old.RungeKutta4Void,engine.bot.rule_based_old.PredictVelocity)"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"checkHole(double[], double[])","u":"checkHole(double[],double[])"},{"p":"engine.bot.rule_based_old","c":"BotInterface","l":"checkHole(double[], double[])","u":"checkHole(double[],double[])"},{"p":"engine.bot.rule_based_old","c":"ComparingAndScoring","l":"checkHole(double[], double[])","u":"checkHole(double[],double[])"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"checkInHole(double[], double[])","u":"checkInHole(double[],double[])"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"chooseAction(State)","u":"chooseAction(engine.bot.ml_bot.agent.State)"},{"p":"ui.helpers","c":"CircularSlider","l":"CircularSlider()","u":"%3Cinit%3E()"},{"p":"engine.bot.AibotGA","c":"Individual","l":"clone()"},{"p":"engine.bot.ml_bot.agent","c":"Reward","l":"CLOSENESS_REWARD"},{"p":"ui.controller","c":"MapPageController.ColorItem","l":"ColorItem(String, Color)","u":"%3Cinit%3E(java.lang.String,javafx.scene.paint.Color)"},{"p":"engine.solvers","c":"Utility","l":"colorToHeight(int)"},{"p":"engine.bot.rule_based_old","c":"ComparingAndScoring","l":"ComparingAndScoring(CheckCollisionAndHeight)","u":"%3Cinit%3E(engine.bot.rule_based_old.CheckCollisionAndHeight)"},{"p":"engine.bot.rule_based_old","c":"BotInterface","l":"comparingVectors(double[][][], double[][], double[], double[], double[])","u":"comparingVectors(double[][][],double[][],double[],double[],double[])"},{"p":"engine.bot.rule_based_old","c":"ComparingAndScoring","l":"comparingVectors(double[][][], double[][], double[], double[], double[])","u":"comparingVectors(double[][][],double[][],double[],double[],double[])"},{"p":"engine.solvers","c":"Utility","l":"coordinateToPixel_X(double)"},{"p":"engine.solvers","c":"Utility","l":"coordinateToPixel_Y(double)"},{"p":"engine.solvers","c":"Utility","l":"coordinateToPixel(double[])"},{"p":"ui.helpers","c":"HeightMap3DChart","l":"createChart()"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"createImage(ArrayList<double[]>)","u":"createImage(java.util.ArrayList)"},{"p":"engine.solvers","c":"MapHandler","l":"createMap(String)","u":"createMap(java.lang.String)"},{"p":"ui.screenFactory","c":"ScreenFactory","l":"createScreen(String, String, double, double, double, double, double, double, double, double, double[], double[])","u":"createScreen(java.lang.String,java.lang.String,double,double,double,double,double,double,double,double,double[],double[])"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"createVelocityVectors(double[])"},{"p":"engine.bot.rule_based_old","c":"CheckCollisionAndHeight","l":"createVelocityVectors(double[])"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"decayEpsilon()"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"ActivationFunction","l":"deriv(double)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"LogSigFunction","l":"deriv(double)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"PureLinearActivationFunction","l":"deriv(double)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"ReLUFunction","l":"deriv(double)"},{"p":"ui.helpers","c":"HeightMap3DChart","l":"display3DChart()"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"DistanceMeasure(double[], double[], double[], double, boolean)","u":"%3Cinit%3E(double[],double[],double[],double,boolean)"},{"p":"engine.solvers.odeSolvers","c":"EulerSolver","l":"EulerSolver()","u":"%3Cinit%3E()"},{"p":"engine.parser","c":"ExpressionParser","l":"evaluate()"},{"p":"engine.parser","c":"IParser","l":"evaluate()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"Experience(State, Action, double, State)","u":"%3Cinit%3E(engine.bot.ml_bot.agent.State,engine.bot.ml_bot.agent.Action,double,engine.bot.ml_bot.agent.State)"},{"p":"engine.parser","c":"ExpressionParser","l":"ExpressionParser(String, Map<String, Double>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"findShortestPath()"},{"p":"ui.controller","c":"FirstScreenController","l":"FirstScreenController()","u":"%3Cinit%3E()"},{"p":"engine.bot.AibotGA","c":"Individual","l":"genoToPhenotype()"},{"p":"engine.bot.ml_bot.agent","c":"Action","l":"getAction()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"getAction()"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"getActivationFunctions()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer","l":"getAllExperiences()"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"getBallStatus()"},{"p":"engine.bot.AibotGA","c":"AiBotGA","l":"getBest()"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"getBias()"},{"p":"engine.bot.AibotGA","c":"Individual","l":"getChromosome()"},{"p":"engine.bot.ml_bot.agent","c":"State","l":"getCoordinates()"},{"p":"engine.bot.ml_bot.agent","c":"State","l":"getCurrentPosition()"},{"p":"engine.solvers","c":"Utility","l":"getDirectionFromVelocity(double[])"},{"p":"ui.helpers","c":"CircularSlider","l":"getDirectionVector()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getDistance(double[], double[])","u":"getDistance(double[],double[])"},{"p":"engine.solvers","c":"Utility","l":"getDistance(double[], double[])","u":"getDistance(double[],double[])"},{"p":"engine.bot.AibotGA","c":"AiBotGA","l":"getDuration()"},{"p":"engine.bot.hillClimbingBot.upd","c":"HillClimbingBot","l":"getDuration()"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"getDuration()"},{"p":"engine.bot.AibotGA","c":"Individual","l":"getFitness()"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"getFunction()"},{"p":"engine.solvers","c":"MapHandler","l":"getGradient()"},{"p":"ui.controller","c":"MapPageController","l":"getHeightCoordinates(String)","u":"getHeightCoordinates(java.lang.String)"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getHole()"},{"p":"engine.bot.rule_based_old","c":"PredictVelocity","l":"getHOLE()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getHoleBallDistance(double[])"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getHoleRadius()"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"getLayers()"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"getLayerSizes()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getMapPath()"},{"p":"ui.helpers","c":"CircularSlider","l":"getMaxValue()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getMessage()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getMinCoordinate()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getMinDistance()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"getNextState()"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"getOnePlay(double[], double[])","u":"getOnePlay(double[],double[])"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"getOnePlay(State)","u":"getOnePlay(engine.bot.ml_bot.agent.State)"},{"p":"engine.bot.ml_bot.perceptron","c":"Predictor","l":"getParams()"},{"p":"engine.bot.ml_bot.network","c":"Layer","l":"getPerceptrons()"},{"p":"engine.solvers","c":"Utility","l":"getPowerFromVelocity(double[])"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"getReward()"},{"p":"ui.controller","c":"FirstScreenController","l":"getRoot()"},{"p":"ui.controller","c":"InputSecondController","l":"getRoot()"},{"p":"ui.controller","c":"LoadMapController","l":"getRoot()"},{"p":"ui.controller","c":"MapPageController","l":"getRoot()"},{"p":"ui.controller","c":"StartScreenController","l":"getRoot()"},{"p":"ui.controller","c":"ThirdScreenController","l":"getRoot()"},{"p":"ui.screenFactory","c":"ScreenInterface","l":"getRoot()"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"getSize()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"getState()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getStatus()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getStoppedToHoleDistance()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getStoppoint()"},{"p":"engine.solvers","c":"MapHandler","l":"getTerrain()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"getTreeHit()"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"getTurningPoints(ArrayList<double[]>)","u":"getTurningPoints(java.util.ArrayList)"},{"p":"ui.helpers","c":"CircularSlider","l":"getValue()"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"getWeights()"},{"p":"engine.solvers","c":"BallStatus","l":"Goal"},{"p":"ui.controller","c":"MapPageController","l":"goBack()"},{"p":"engine.bot.AibotGA","c":"AiBotGA","l":"golfBot(double[])"},{"p":"engine.solvers","c":"GolfGameEngine","l":"GolfGameEngine(SolverInterface, double[], double, double[], double, String)","u":"%3Cinit%3E(engine.solvers.odeSolvers.SolverInterface,double[],double,double[],double,java.lang.String)"},{"p":"engine.solvers.odeFunctions","c":"golfphysics","l":"golfphysics()","u":"%3Cinit%3E()"},{"p":"engine.solvers","c":"TerrainType","l":"Grass"},{"p":"engine.bot.AibotGA","c":"HeapSort","l":"HeapSort()","u":"%3Cinit%3E()"},{"p":"engine.bot.rule_based_old","c":"CheckCollisionAndHeight","l":"heightChecker(double[][][], double[], double[], double[])","u":"heightChecker(double[][][],double[],double[],double[])"},{"p":"ui.helpers","c":"HeightMap3DChart","l":"HeightMap3DChart(double[][], Pane)","u":"%3Cinit%3E(double[][],javafx.scene.layout.Pane)"},{"p":"engine.solvers","c":"Utility","l":"heightToColor(double)"},{"p":"engine.bot.hillClimbingBot.upd","c":"HillClimbingBot","l":"hillClimbingAlgorithm()"},{"p":"engine.bot.hillClimbingBot.upd","c":"HillClimbingBot","l":"HillClimbingBot(GolfGameEngine, double[], double[], String, double)","u":"%3Cinit%3E(engine.solvers.GolfGameEngine,double[],double[],java.lang.String,double)"},{"p":"engine.solvers","c":"BallStatus","l":"HitWater"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"howFarItSee(ArrayList<double[]>, double[])","u":"howFarItSee(java.util.ArrayList,double[])"},{"p":"engine.bot.AibotGA","c":"Individual","l":"Individual(char[][])","u":"%3Cinit%3E(char[][])"},{"p":"ui.controller","c":"MapPageController","l":"initialize()"},{"p":"ui.controller","c":"ThirdScreenController","l":"initialize()"},{"p":"ui.controller","c":"InputSecondController","l":"initialize(String)","u":"initialize(java.lang.String)"},{"p":"ui.controller","c":"ThirdScreenController","l":"initializeParameters(double[], double[], double, double, double)","u":"initializeParameters(double[],double[],double,double,double)"},{"p":"ui.controller","c":"MapPageController","l":"initializeParameters(String, double, double, double, double, double, double, double, double)","u":"initializeParameters(java.lang.String,double,double,double,double,double,double,double,double)"},{"p":"ui.controller","c":"InputSecondController","l":"InputSecondController()","u":"%3Cinit%3E()"},{"p":"engine.bot.AibotGA","c":"AiBotGA","l":"isGoal()"},{"p":"engine.bot.hillClimbingBot.upd","c":"HillClimbingBot","l":"isGoal()"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"isGoal()"},{"p":"engine.solvers","c":"GolfGameEngine","l":"isGoal()"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"isObstacled(double[], double[])","u":"isObstacled(double[],double[])"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"isTrained"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"lastShot(double[], double[])","u":"lastShot(double[],double[])"},{"p":"engine.bot.rule_based_old","c":"RuleBasedPlayer","l":"lastShot(double[], double[])","u":"lastShot(double[],double[])"},{"p":"engine.bot.ml_bot.network","c":"Layer","l":"Layer(int, int, ActivationFunction)","u":"%3Cinit%3E(int,int,engine.bot.ml_bot.math.activation_functions.ActivationFunction)"},{"p":"ui.controller","c":"LoadMapController","l":"LoadMapController()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"loadModel(String)","u":"loadModel(java.lang.String)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"LogSigFunction","l":"LogSigFunction()","u":"%3Cinit%3E()"},{"p":"ui","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"ui","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"engine.solvers","c":"MapHandler","l":"MapHandler()","u":"%3Cinit%3E()"},{"p":"ui.controller","c":"MapPageController","l":"MapPageController()","u":"%3Cinit%3E()"},{"p":"engine.bot.AibotGA","c":"MapSearcher","l":"MapSearcher(String, double[], double[], double)","u":"%3Cinit%3E(java.lang.String,double[],double[],double)"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"NeuralNetwork(int, int[], ActivationFunction)","u":"%3Cinit%3E(int,int[],engine.bot.ml_bot.math.activation_functions.ActivationFunction)"},{"p":"ui.controller","c":"FirstScreenController","l":"nextScreen(ActionEvent)","u":"nextScreen(javafx.event.ActionEvent)"},{"p":"ui.controller","c":"InputSecondController","l":"nextScreen(ActionEvent)","u":"nextScreen(javafx.event.ActionEvent)"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"nextState"},{"p":"engine.bot.rule_based_old","c":"RungeKutta4Void","l":"nextstep(FunctionInterface, double[], double[], double[], double)","u":"nextstep(engine.solvers.odeFunctions.FunctionInterface,double[],double[],double[],double)"},{"p":"engine.solvers.odeSolvers","c":"EulerSolver","l":"nextstep(FunctionInterface, double[], double[], double[], double)","u":"nextstep(engine.solvers.odeFunctions.FunctionInterface,double[],double[],double[],double)"},{"p":"engine.solvers.odeSolvers","c":"RK4","l":"nextstep(FunctionInterface, double[], double[], double[], double)","u":"nextstep(engine.solvers.odeFunctions.FunctionInterface,double[],double[],double[],double)"},{"p":"engine.solvers.odeSolvers","c":"SolverInterface","l":"nextstep(FunctionInterface, double[], double[], double[], double)","u":"nextstep(engine.solvers.odeFunctions.FunctionInterface,double[],double[],double[],double)"},{"p":"engine.solvers","c":"BallStatus","l":"Normal"},{"p":"engine.solvers.odeFunctions","c":"FunctionInterface","l":"ode(double[], double[], double[])","u":"ode(double[],double[],double[])"},{"p":"engine.solvers.odeFunctions","c":"golfphysics","l":"ode(double[], double[], double[])","u":"ode(double[],double[],double[])"},{"p":"engine.bot.AibotGA","c":"AiBotGA","l":"oneShot(double[], AiBotGA.TargetType, double[])","u":"oneShot(double[],engine.bot.AibotGA.AiBotGA.TargetType,double[])"},{"p":"engine.solvers","c":"BallStatus","l":"OutOfBoundary"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"PerceptronParams(ActivationFunction, int)","u":"%3Cinit%3E(engine.bot.ml_bot.math.activation_functions.ActivationFunction,int)"},{"p":"engine.solvers","c":"Utility","l":"pixelToCoordinate_X(int)"},{"p":"engine.solvers","c":"Utility","l":"pixelToCoordinate_Y(int)"},{"p":"engine.solvers","c":"Utility","l":"pixelToCoordinate(int[])"},{"p":"engine.bot.rule_based_new","c":"DistanceBot","l":"playGame(double[], double[], boolean)","u":"playGame(double[],double[],boolean)"},{"p":"engine.bot.rule_based_new","c":"DistanceMeasure","l":"playGame(double[], double[], boolean)","u":"playGame(double[],double[],boolean)"},{"p":"engine.solvers","c":"MapHandler","l":"plotTrajectory(String, String, ArrayList<double[]>)","u":"plotTrajectory(java.lang.String,java.lang.String,java.util.ArrayList)"},{"p":"engine.bot.ml_bot.network","c":"Layer","l":"predict(RealVector)","u":"predict(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"predict(RealVector)","u":"predict(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.perceptron","c":"Perceptron","l":"predict(RealVector)","u":"predict(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.perceptron","c":"Predictor","l":"predict(RealVector)","u":"predict(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"predictMaxQValue(RealVector)","u":"predictMaxQValue(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.perceptron","c":"Predictor","l":"Predictor(PerceptronParams)","u":"%3Cinit%3E(engine.bot.ml_bot.perceptron.PerceptronParams)"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"predictQValue(RealVector, RealVector)","u":"predictQValue(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.rule_based_old","c":"PredictVelocity","l":"PredictVelocity(GolfGameEngine)","u":"%3Cinit%3E(engine.solvers.GolfGameEngine)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"PureLinearActivationFunction","l":"PureLinearActivationFunction()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.math.q_calculations","c":"QCalculations","l":"QCalculations(NeuralNetwork, double)","u":"%3Cinit%3E(engine.bot.ml_bot.network.NeuralNetwork,double)"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"QLearningAgent(double, GolfGameEngine, State, RealVector, MapSearcher)","u":"%3Cinit%3E(double,engine.solvers.GolfGameEngine,engine.bot.ml_bot.agent.State,org.apache.commons.math3.linear.RealVector,engine.bot.AibotGA.MapSearcher)"},{"p":"engine.solvers","c":"Utility","l":"ratio"},{"p":"engine.solvers","c":"MapHandler","l":"readmap(String)","u":"readmap(java.lang.String)"},{"p":"engine.bot.ml_bot.math.activation_functions","c":"ReLUFunction","l":"ReLUFunction()","u":"%3Cinit%3E()"},{"p":"engine.solvers","c":"MapHandler","l":"renderMap(int[][], String, double[], double, boolean)","u":"renderMap(int[][],java.lang.String,double[],double,boolean)"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer","l":"ReplayBuffer()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"reward"},{"p":"engine.bot.ml_bot.agent","c":"Reward","l":"Reward(GolfGameEngine)","u":"%3Cinit%3E(engine.solvers.GolfGameEngine)"},{"p":"engine.solvers.odeSolvers","c":"RK4","l":"RK4()","u":"%3Cinit%3E()"},{"p":"engine.bot.rule_based_old","c":"RuleBasedPlayer","l":"RuleBasedPlayer(ComparingAndScoring, GolfGameEngine)","u":"%3Cinit%3E(engine.bot.rule_based_old.ComparingAndScoring,engine.solvers.GolfGameEngine)"},{"p":"engine.bot.rule_based_old","c":"RungeKutta4Void","l":"RungeKutta4Void()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer","l":"sampleBatch(int)"},{"p":"engine.solvers","c":"TerrainType","l":"Sand"},{"p":"ui.helpers","c":"CanvasToPng","l":"saveCanvasAsPNG()"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"saveModel(NeuralNetwork, String, String)","u":"saveModel(engine.bot.ml_bot.network.NeuralNetwork,java.lang.String,java.lang.String)"},{"p":"engine.bot.rule_based_old","c":"RuleBasedPlayer","l":"scoreGoal(double[], Boolean)","u":"scoreGoal(double[],java.lang.Boolean)"},{"p":"ui.screenFactory","c":"ScreenFactory","l":"ScreenFactory()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.agent","c":"Action","l":"setAction(RealVector)","u":"setAction(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"setBias(double)"},{"p":"engine.bot.AibotGA","c":"Individual","l":"setChromosome(char[][])"},{"p":"engine.bot.ml_bot.agent","c":"State","l":"setCurrentPosition(RealVector)","u":"setCurrentPosition(org.apache.commons.math3.linear.RealVector)"},{"p":"engine.bot.AibotGA","c":"Individual","l":"setFitness(double)"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"setFunction(ActivationFunction)","u":"setFunction(engine.bot.ml_bot.math.activation_functions.ActivationFunction)"},{"p":"ui.helpers","c":"CircularSlider","l":"setMaxValue(double)"},{"p":"ui.controller","c":"FirstScreenController","l":"setRoot(Parent)","u":"setRoot(javafx.scene.Parent)"},{"p":"ui.controller","c":"InputSecondController","l":"setRoot(Parent)","u":"setRoot(javafx.scene.Parent)"},{"p":"ui.controller","c":"LoadMapController","l":"setRoot(Parent)","u":"setRoot(javafx.scene.Parent)"},{"p":"ui.controller","c":"MapPageController","l":"setRoot(Parent)","u":"setRoot(javafx.scene.Parent)"},{"p":"ui.controller","c":"StartScreenController","l":"setRoot(Parent)","u":"setRoot(javafx.scene.Parent)"},{"p":"ui.controller","c":"ThirdScreenController","l":"setRoot(Parent)","u":"setRoot(javafx.scene.Parent)"},{"p":"ui","c":"Main","l":"setScreen(String, String, double, double, double, double, double, double, double, double, double[], double[])","u":"setScreen(java.lang.String,java.lang.String,double,double,double,double,double,double,double,double,double[],double[])"},{"p":"ui.helpers","c":"CircularSlider","l":"setValue(double)"},{"p":"engine.bot.ml_bot.perceptron","c":"PerceptronParams","l":"setWeights(double[])"},{"p":"engine.solvers","c":"GolfGameEngine","l":"shoot(double[], Boolean)","u":"shoot(double[],java.lang.Boolean)"},{"p":"engine.bot.AibotGA","c":"HeapSort","l":"sort(Individual[])","u":"sort(engine.bot.AibotGA.Individual[])"},{"p":"ui","c":"Main","l":"start(Stage)","u":"start(javafx.stage.Stage)"},{"p":"ui.controller","c":"StartScreenController","l":"StartScreenController()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.network","c":"ReplayBuffer.Experience","l":"state"},{"p":"engine.bot.ml_bot.agent","c":"State","l":"State(RealVector)","u":"%3Cinit%3E(org.apache.commons.math3.linear.RealVector)"},{"p":"ui.controller","c":"ThirdScreenController","l":"ThirdScreenController()","u":"%3Cinit%3E()"},{"p":"engine.bot.ml_bot.agent","c":"State","l":"toStateArray(double[])"},{"p":"engine.bot.ml_bot.agent","c":"State","l":"toStateVector(RealVector)","u":"toStateVector(org.apache.commons.math3.linear.RealVector)"},{"p":"ui.controller","c":"MapPageController.ColorItem","l":"toString()"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"train(int)"},{"p":"engine.bot.ml_bot.network","c":"NeuralNetwork","l":"train(RealVector, RealVector, RealVector, double, double, double, NeuralNetwork)","u":"train(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double,double,double,engine.bot.ml_bot.network.NeuralNetwork)"},{"p":"engine.solvers","c":"TerrainType","l":"Tree"},{"p":"engine.bot.ml_bot.perceptron","c":"UpdateParams","l":"update(PerceptronParams, RealVector, double, double)","u":"update(engine.bot.ml_bot.perceptron.PerceptronParams,org.apache.commons.math3.linear.RealVector,double,double)"},{"p":"engine.bot.ml_bot.agent","c":"QLearningAgent","l":"updateQValues(int)"},{"p":"engine.solvers","c":"Utility","l":"Utility()","u":"%3Cinit%3E()"},{"p":"engine.solvers","c":"BallStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"engine.solvers","c":"TerrainType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"ui.helpers","c":"CircularSlider","l":"valueProperty()"},{"p":"engine.solvers","c":"BallStatus","l":"values()"},{"p":"engine.solvers","c":"TerrainType","l":"values()"},{"p":"engine.solvers","c":"TerrainType","l":"Water"}];updateSearchResults();